"use strict";angular.module("galleryGenApp",["ngCookies","ngResource","ngSanitize","ngRoute","ui.directives","placeholders.img"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]).factory("imageProvider",["$log","$q",function(a,b){a.info("Service ready");var c=[],d=[],e=500,f=function(){angular.forEach(c,function(a){a()})},g=function(c){var d=b.defer();return setTimeout(function(){function b(a){var b=Math.floor(a.width/2),c=Math.floor(a.height/2),d=document.createElement("canvas"),e=d.getContext("2d");d.width=b,d.height=c,e.drawImage(a,0,0,b,c);var f=new Image;return f.title=a.title,f.src=d.toDataURL("image/png"),f}a.info("Making thumbnail for "+c.title),a.info("MaxHeight is currently: "+e),a.info(typeof e);for(var f=c;f.height>e;)f=b(f);a.info("New thumbnail height: "+f.height),d.resolve(f)},100),d.promise};return{setMaxHeight:function(b){a.debug("Updating max height to: "+b),e=b},addImage:function(b){a.info("Got new image data!");var c=new Image,e=b.name;e=e.slice(0,e.lastIndexOf(".")),a.info("filename: "+e),c.src=b.dataURI,c.title=e;var h=d.push({filename:e,original:c});a.info("Index is "+h),g(c).then(function(a){d[h-1].thumbnail=a}),f()},images:d,registerObserver:function(a){c.push(a)}}}]).directive("droppable",["$compile","$rootScope","$log","imageProvider",function(a,b,c,d){return{restrict:"A",link:function(a,b){b.context.ondragover=function(){return b.addClass("indicate-drop"),!1},b.context.ondragleave=function(){b.removeClass("indicate-drop")},b.context.ondrop=function(a){c.info("Something has been dropped!");var e=a.dataTransfer.files;c.info("Files received:"),c.info(e);for(var f=0;f<e.length;f++){var g=e[f],h=new FileReader;h.onload=function(a){return function(b){c.info("File loaded"),c.info(a.name),c.info(b),c.info("Now we try share..."),d.addImage({name:a.name,dataURI:b.target.result})}}(g),h.readAsDataURL(g)}return b.removeClass("indicate-drop"),a.stopPropagation(),a.preventDefault(),!1}}}}]),angular.module("galleryGenApp").controller("MainCtrl",["$scope","$rootScope","$sce","$log","imageProvider",function(a,b,c,d,e){function f(){d.info("Updating images..."),a.$apply(function(){a.images=e.images})}a.processing=!1,a.images=e.images,a.download={show:!1},a.maxHeight=500,a.$watch("maxHeight",function(a){e.setMaxHeight(parseInt(a))}),e.registerObserver(f),a.processImages=function(){d.info("Ok processing all the images now..."),a.processing=!0;var b=[],c=new JSZip,e=c.folder("images");a.images.forEach(function(a){function c(a){var b=document.createElement("canvas");b.width=a.width,b.height=a.height;var c=b.getContext("2d");c.drawImage(a,0,0);var d=b.toDataURL("image/png");return d.replace(/^data:image\/(png|jpg);base64,/,"")}d.info("Processing img: "+a.filename);var f=a.filename+".png",g=a.filename+"_thumb.png",h={source:"images/"+g,width:a.thumbnail.width,height:a.thumbnail.height,images:[{height:a.original.height,width:a.original.width,source:"images/"+f}]};a.filename&&(h.id=a.filename),a.original.title&&(h.name=a.title),b.push(h);var i=c(a.thumbnail)+"\n";e.file(g,i,{base64:!0})}),a.imageData=angular.toJson(b,!0),c.file("images.json",a.imageData),d.info("Creating zip....");var f=c.generate({type:"blob"});d.info("Zip ready! Size is: "+f.length),a.download=function(){saveAs(f,"gallery_thumbnails.zip")},a.download.show=!0}}]);